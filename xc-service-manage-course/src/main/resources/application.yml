server:
  port: 31200
spring:
  application:
    name: xc-service-manage-course
  data:
    mongodb:
      uri: mongodb://root:123@localhost:27017/admin
      database: xc_cms
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/xc_course?characterEncoding=utf-8
      username: root
      password: 123456
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
pagehelper:
  auto-dialect: mysql

eureka:
  client:
    register-with-eureka: true  #服务注册，是否将自己注册到Eureka服务中
    fetch-registry: true  #服务发现，是否从Eureka中获取注册信息
    service-url:  #Eureka客户端与Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
      defaultZone: http://localhost:50101/eureka/,http://localhost:50102/eureka/  # 多个eureka相互注册，形成eureka集群
  server:
    enable-self-preservation: false  # 是否开启自我保护模式
    eviction-interval-timer-in-ms: 60000  # 服务注册表清理间隔（单位：毫秒，默认60*1000）
  instance:
    prefer-ip-address: true  # 将自己的ip地址注册到Eureka服务中
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port}   # 指定实例id

ribbon:
  MaxAutoRetries: 2  # 最大重试次数，当Eureka中可以找到服务，但是服务连不上时会重试
  MaxAutoRetriesNextServer: 3 # 切换实例的重试次数,多个有一实例死掉了，需要切换实例
  OkToRetryOnAllOperatins: false # 对所有操作请求进行重试，如果是get则可以，如果是post、put等操作没有出现幂等的情况下时非常危险的，所以设置为false
  ConnectTimeout: 5000 # 请求连接的超时时间
  ReadTimeout: 6000 # 请求处理的超时时间

course-publish:
  siteId: 5f5c7e69c84bc83ae8e1721f
  templateId: 5f5c491bc84bc83ae8e17210
  previewUrl: http://www.xclearn.com/cms/preview/
  pageWebPath: /course/detail/
  pagePhyscialPath: D:/develop/xuecheng/static/course/detail/
  dataUrlPre: http://localhost:31200/course/courseview/